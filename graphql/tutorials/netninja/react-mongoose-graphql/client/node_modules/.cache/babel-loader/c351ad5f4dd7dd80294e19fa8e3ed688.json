{"ast":null,"code":"var _jsxFileName = \"/Users/sheezaaziz/Documents/coding/learning/FullStack-Practice/react-mongoose-graphql/client/src/components/AddBook.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_AUTHORS, ADD_BOOK } from '../queries/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddBook() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [title, setTitle] = useState('');\n  const [genre, setGenre] = useState(''); // for submitting book mutation...\n\n  const [addBookMutation, {\n    data,\n    loading,\n    error\n  }] = useMutation(ADD_BOOK);\n  if (loading) return 'Submitting...';\n  if (error) return `Submission error! ${error.message}`;\n\n  const DisplayAuthors = () => {\n    _s();\n\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(GET_AUTHORS);\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 23\n    }, this);\n    return data.authors.map(({\n      name,\n      id\n    }) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: id,\n      children: name\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this));\n  };\n\n  _s(DisplayAuthors, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  });\n\n  const AddBook = evt => {\n    evt.preventDefault();\n    console.log(title, genre); // addBookMutation({ variables: { title: title, genre: genre } });\n  };\n\n  const handleUpdateAuthor = evt => {\n    evt.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: AddBook,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"title\",\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"genre\",\n      placeholder: \"genre\",\n      onChange: e => setGenre(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"colours\",\n      onChange: handleUpdateAuthor,\n      children: \"DisplayAuthors()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AddBook, \"WBXFir7yPPSa6I37wxnyVgD72sI=\", false, function () {\n  return [useMutation];\n});\n\n_c = AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["/Users/sheezaaziz/Documents/coding/learning/FullStack-Practice/react-mongoose-graphql/client/src/components/AddBook.js"],"names":["React","useState","useQuery","useMutation","GET_AUTHORS","ADD_BOOK","AddBook","title","setTitle","genre","setGenre","addBookMutation","data","loading","error","message","DisplayAuthors","authors","map","name","id","evt","preventDefault","console","log","handleUpdateAuthor","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,oBAAtC;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC,CAFgC,CAGhC;;AACA,QAAM,CAACU,eAAD,EAAkB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAlB,IAA8CX,WAAW,CAACE,QAAD,CAA/D;AACA,MAAIQ,OAAJ,EAAa,OAAO,eAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,qBAAoBA,KAAK,CAACC,OAAQ,EAA1C;;AAEX,QAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,UAAM;AAAEH,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBF,MAAAA;AAAlB,QAA2BV,QAAQ,CAACE,WAAD,CAAzC;AACA,QAAIS,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAEX,WAAOF,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAiB,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,kBACtB;AAAiB,MAAA,KAAK,EAAEA,EAAxB;AAAA,gBAA6BD;AAA7B,OAAaC,EAAb;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAGD,GARD;;AARgC,KAQ1BJ,cAR0B;AAAA,YASGd,QATH;AAAA;;AAkBhC,QAAMI,OAAO,GAAIe,GAAD,IAAS;AACvBA,IAAAA,GAAG,CAACC,cAAJ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ,EAAmBE,KAAnB,EAFuB,CAGvB;AACD,GAJD;;AAMA,QAAMgB,kBAAkB,GAAIJ,GAAD,IAAS;AAClCA,IAAAA,GAAG,CAACC,cAAJ;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEhB,OAAhB;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,WAAW,EAAC,OAHd;AAIE,MAAA,QAAQ,EAAEoB,CAAC,IAAIlB,QAAQ,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJzB;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,WAAW,EAAC,OAHd;AAIE,MAAA,QAAQ,EAAEF,CAAC,IAAIhB,QAAQ,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJzB;AAAA;AAAA;AAAA;AAAA,YAPF,eAaE;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAqB,MAAA,QAAQ,EAAEH,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;IAhDuBnB,O;UAI8BH,W;;;KAJ9BG,O","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_AUTHORS, ADD_BOOK } from '../queries/queries';\n\nexport default function AddBook() {\n  const [title, setTitle] = useState('');\n  const [genre, setGenre] = useState('');\n  // for submitting book mutation...\n  const [addBookMutation, { data, loading, error }] = useMutation(ADD_BOOK);\n  if (loading) return 'Submitting...';\n  if (error) return `Submission error! ${error.message}`\n\n  const DisplayAuthors = () => {\n    const { loading, error, data } = useQuery(GET_AUTHORS);\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return data.authors.map(({ name, id }) => (\n      <option key={id} value={id}>{name}</option>\n    ));\n  }\n\n  const AddBook = (evt) => {\n    evt.preventDefault();\n    console.log(title, genre);\n    // addBookMutation({ variables: { title: title, genre: genre } });\n  }\n\n  const handleUpdateAuthor = (evt) => {\n    evt.preventDefault();\n  }\n\n  return (\n    <form onSubmit={AddBook}>\n      <input\n        type='text'\n        name='title'\n        placeholder='title'\n        onChange={e => setTitle(e.target.value)}\n      />\n      <input\n        type='text'\n        name='genre'\n        placeholder='genre'\n        onChange={e => setGenre(e.target.value)}\n      />\n      <select id='colours' onChange={handleUpdateAuthor}>\n        DisplayAuthors()\n      </select>\n      <button>submit</button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}