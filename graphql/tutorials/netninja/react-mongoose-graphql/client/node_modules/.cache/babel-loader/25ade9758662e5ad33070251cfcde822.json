{"ast":null,"code":"var _jsxFileName = \"/Users/sheezaaziz/Documents/coding/learning/FullStack-Practice/react-mongoose-graphql/client/src/components/BookList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client'; // graphql queries\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOOK_LIST = gql`\n  query getBooksQuery {\n    books {\n      name\n      id\n    }\n  }\n`;\nexport default function BookList() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(BOOK_LIST);\n\n  const DisplayBooks = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 23\n    }, this);\n    return data.books.map(({\n      name,\n      id\n    }) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: name\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"book-list\",\n      children: DisplayBooks()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BookList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/Users/sheezaaziz/Documents/coding/learning/FullStack-Practice/react-mongoose-graphql/client/src/components/BookList.js"],"names":["React","gql","useQuery","BOOK_LIST","BookList","loading","error","data","DisplayBooks","books","map","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B,C,CAEA;;;AACA,MAAMC,SAAS,GAAGF,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,eAAe,SAASG,QAAT,GAAoB;AAAA;;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BL,QAAQ,CAACC,SAAD,CAAzC;;AAEA,QAAMK,YAAY,GAAG,MAAM;AACzB,QAAIH,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAEX,WAAOC,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAe,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,kBACpB;AAAA,gBAAcD;AAAd,OAASC,EAAT;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAGD,GAPD;;AASA,sBACE;AAAA,2BACE;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA,gBACIJ,YAAY;AADhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAnBuBJ,Q;UACWF,Q;;;KADXE,Q","sourcesContent":["import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\n\n// graphql queries\nconst BOOK_LIST = gql`\n  query getBooksQuery {\n    books {\n      name\n      id\n    }\n  }\n`;\n\nexport default function BookList() {\n  const { loading, error, data } = useQuery(BOOK_LIST);\n\n  const DisplayBooks = () => {\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n      \n    return data.books.map(({ name, id }) => (\n      <li key={id}>{name}</li>\n    ));\n  }\n\n  return (\n    <div>\n      <ul id='book-list'>\n        { DisplayBooks() }\n      </ul>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}