{"ast":null,"code":"var _jsxFileName = \"/Users/sheezaaziz/Documents/coding/learning/FullStack-Practice/react-mongoose-graphql/client/src/components/BookList.js\";\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { GET_BOOKS } from '../queries/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookList() {\n  var _s = $RefreshSig$();\n\n  const DisplayBooks = () => {\n    _s();\n\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(GET_BOOKS);\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 23\n    }, this);\n    return data.books.map(({\n      name,\n      id\n    }) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: name\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this));\n  };\n\n  _s(DisplayBooks, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"book-list\",\n      children: DisplayBooks()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/Users/sheezaaziz/Documents/coding/learning/FullStack-Practice/react-mongoose-graphql/client/src/components/BookList.js"],"names":["React","gql","useQuery","GET_BOOKS","BookList","DisplayBooks","loading","error","data","books","map","name","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,QAA2BN,QAAQ,CAACC,SAAD,CAAzC;AACA,QAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAEX,WAAOC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,kBACpB;AAAA,gBAAcD;AAAd,OAASC,EAAT;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAGD,GARD;;AADiC,KAC3BP,YAD2B;AAAA,YAEEH,QAFF;AAAA;;AAWjC,sBACE;AAAA,2BACE;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA,gBACIG,YAAY;AADhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;KAlBuBD,Q","sourcesContent":["import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { GET_BOOKS } from '../queries/queries';\n\nexport default function BookList() {\n  const DisplayBooks = () => {\n    const { loading, error, data } = useQuery(GET_BOOKS);\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return data.books.map(({ name, id }) => (\n      <li key={id}>{name}</li>\n    ));\n  }\n\n  return (\n    <div>\n      <ul id='book-list'>\n        { DisplayBooks() }\n      </ul>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}