{"ast":null,"code":"var _jsxFileName = \"/Users/sheezaaziz/Documents/coding/learning/FullStack-Practice/react-mongoose-graphql/client/src/components/AddBook.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_AUTHORS, ADD_BOOK, GET_BOOKS } from '../queries/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddBook() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [title, setTitle] = useState('');\n  const [genre, setGenre] = useState(''); // for submitting book mutation...\n\n  const [addBookMutation, {\n    data,\n    loading,\n    error\n  }] = useMutation(ADD_BOOK);\n\n  const DisplayAuthors = () => {\n    _s();\n\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(GET_AUTHORS);\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 23\n    }, this);\n    return data.authors.map(({\n      name,\n      id\n    }) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: id,\n      children: name\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this));\n  };\n\n  _s(DisplayAuthors, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  });\n\n  const AddBook = evt => {\n    evt.preventDefault();\n    console.log(title, genre);\n    addBookMutation({\n      variables: {\n        name: title,\n        genre: genre,\n        authorId: '890'\n      },\n      refetchQueries: {\n        query: GET_BOOKS\n      }\n    });\n    if (loading) console.log('submitting...');\n    if (error) console.log('error: ', error.message);\n  };\n\n  const handleUpdateAuthor = evt => {\n    evt.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: AddBook,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"title\",\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"genre\",\n      onChange: e => setGenre(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"colours\",\n      onChange: handleUpdateAuthor,\n      children: \"DisplayAuthors()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AddBook, \"WBXFir7yPPSa6I37wxnyVgD72sI=\", false, function () {\n  return [useMutation];\n});\n\n_c = AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["/Users/sheezaaziz/Documents/coding/learning/FullStack-Practice/react-mongoose-graphql/client/src/components/AddBook.js"],"names":["React","useState","useQuery","useMutation","GET_AUTHORS","ADD_BOOK","GET_BOOKS","AddBook","title","setTitle","genre","setGenre","addBookMutation","data","loading","error","DisplayAuthors","authors","map","name","id","evt","preventDefault","console","log","variables","authorId","refetchQueries","query","message","handleUpdateAuthor","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_AUTHORS, ADD_BOOK, GET_BOOKS } from '../queries/queries';\n\nexport default function AddBook() {\n  const [title, setTitle] = useState('');\n  const [genre, setGenre] = useState('');\n  // for submitting book mutation...\n  const [addBookMutation, { data, loading, error }] = useMutation(ADD_BOOK);\n\n  const DisplayAuthors = () => {\n    const { loading, error, data } = useQuery(GET_AUTHORS);\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return data.authors.map(({ name, id }) => (\n      <option key={id} value={id}>{name}</option>\n    ));\n  }\n\n  const AddBook = (evt) => {\n    evt.preventDefault();\n    console.log(title, genre);\n    addBookMutation({\n      variables: { name: title, genre: genre, authorId: '890'},\n      refetchQueries: { query: GET_BOOKS },\n    });\n    if (loading) console.log('submitting...');\n    if (error) console.log('error: ', error.message);\n  }\n\n  const handleUpdateAuthor = (evt) => {\n    evt.preventDefault();\n  }\n\n  return (\n    <form onSubmit={AddBook}>\n      <input\n        type='text'\n        placeholder='title'\n        onChange={e => setTitle(e.target.value)}\n      />\n      <input\n        type='text'\n        placeholder='genre'\n        onChange={e => setGenre(e.target.value)}\n      />\n      <select id='colours' onChange={handleUpdateAuthor}>\n        DisplayAuthors()\n      </select>\n      <button>submit</button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}