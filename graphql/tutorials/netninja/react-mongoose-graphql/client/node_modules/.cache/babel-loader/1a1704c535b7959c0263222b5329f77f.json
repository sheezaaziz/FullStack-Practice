{"ast":null,"code":"var _jsxFileName = \"/Users/sheezaaziz/Documents/coding/learning/FullStack-Practice/react-mongoose-graphql/client/src/components/AddBook.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { gql, useQuery } from '@apollo/client'; // graphql queries\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_AUTHORS = gql`\n  query getBooksQuery {\n    authors {\n      name\n      id\n    }\n  }\n`;\nexport default function AddBook() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [title, setTitle] = useState('');\n  const [genre, setGenre] = useState('');\n\n  const DisplayAuthors = () => {\n    _s();\n\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(GET_AUTHORS);\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 23\n    }, this);\n    return data.authors.map(({\n      name,\n      id\n    }) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: id,\n      children: name\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this));\n  };\n\n  _s(DisplayAuthors, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  });\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n  };\n\n  const handleUpdateAuthor = evt => {\n    evt.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"title\",\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"genre\",\n      placeholder: \"genre\",\n      onChange: e => setGenre(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"colours\",\n      onChange: handleUpdateAuthor,\n      children: \"displayAuthors()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n} // <option\n//   value='select author'\n//   disabled={true}\n// >\n//   select author\n// </option>\n\n_s2(AddBook, \"TvlsWPcWif/fDjHBUwdrz9E98cI=\");\n\n_c = AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["/Users/sheezaaziz/Documents/coding/learning/FullStack-Practice/react-mongoose-graphql/client/src/components/AddBook.js"],"names":["React","useState","gql","useQuery","GET_AUTHORS","AddBook","title","setTitle","genre","setGenre","DisplayAuthors","loading","error","data","authors","map","name","id","handleSubmit","evt","preventDefault","handleUpdateAuthor","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B,C,CAEA;;;AACA,MAAMC,WAAW,GAAGF,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,eAAe,SAASG,OAAT,GAAmB;AAAA;;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMS,cAAc,GAAG,MAAM;AAAA;;AAC3B,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,QAA2BV,QAAQ,CAACC,WAAD,CAAzC;AACA,QAAIO,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAEX,WAAOC,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiB,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,kBACtB;AAAiB,MAAA,KAAK,EAAEA,EAAxB;AAAA,gBAA6BD;AAA7B,OAAaC,EAAb;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAGD,GARD;;AAJgC,KAI1BP,cAJ0B;AAAA,YAKGP,QALH;AAAA;;AAchC,QAAMe,YAAY,GAAIC,GAAD,IAAS;AAC5BA,IAAAA,GAAG,CAACC,cAAJ;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAIF,GAAD,IAAS;AAClCA,IAAAA,GAAG,CAACC,cAAJ;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,WAAW,EAAC,OAHd;AAIE,MAAA,QAAQ,EAAEI,CAAC,IAAIf,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;AAJzB;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,WAAW,EAAC,OAHd;AAIE,MAAA,QAAQ,EAAEF,CAAC,IAAIb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAJzB;AAAA;AAAA;AAAA;AAAA,YAPF,eAaE;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAqB,MAAA,QAAQ,EAAEH,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,C,CACD;AACA;AACA;AACA;AACA;AACA;;IA/CwBhB,O;;KAAAA,O","sourcesContent":["import React, { useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\n\n// graphql queries\nconst GET_AUTHORS = gql`\n  query getBooksQuery {\n    authors {\n      name\n      id\n    }\n  }\n`;\n\nexport default function AddBook() {\n  const [title, setTitle] = useState('');\n  const [genre, setGenre] = useState('');\n\n  const DisplayAuthors = () => {\n    const { loading, error, data } = useQuery(GET_AUTHORS);\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return data.authors.map(({ name, id }) => (\n      <option key={id} value={id}>{name}</option>\n    ));\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n  }\n\n  const handleUpdateAuthor = (evt) => {\n    evt.preventDefault();\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type='text'\n        name='title'\n        placeholder='title'\n        onChange={e => setTitle(e.target.value)}\n      />\n      <input\n        type='text'\n        name='genre'\n        placeholder='genre'\n        onChange={e => setGenre(e.target.value)}\n      />\n      <select id='colours' onChange={handleUpdateAuthor}>\n        displayAuthors()\n      </select>\n    </form>\n  )\n}\n// <option\n//   value='select author'\n//   disabled={true}\n// >\n//   select author\n// </option>\n"]},"metadata":{},"sourceType":"module"}