{"ast":null,"code":"var _jsxFileName = \"/Users/sheezaaziz/Documents/coding/learning/FullStack-Practice/graphql/tutorials/modern-graphql-apollo-prisma/social-media-fullstack/client/src/pages/Signin/Signin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Form } from \"react-bootstrap\";\nimport Button from \"@restart/ui/esm/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGN_IN = gql`\n  mutation SignIn($email: String!, $password: String!) {\n    signin(credentials: { password: $password, email: $email }) {\n      userErrors {\n        message\n      }\n      token\n    }\n  }\n`;\nexport default function Signin() {\n  _s();\n\n  const [signin, {\n    data,\n    loading\n  }] = useMutation(SIGN_IN);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleClick = () => {\n    signin({\n      variables: {\n        email,\n        password\n      }\n    });\n  };\n\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (data) {\n      if (data.signin.userErrors.length) {\n        setError(data.signin.userErrors[0].message);\n      }\n\n      if (data.signin.token) {\n        localStorage.setItem(\"token\", data.signin.token);\n      }\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClick,\n        children: \"Signin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signin, \"Myju0l7tMvyzPZbdJR6v+qtPibM=\", false, function () {\n  return [useMutation];\n});\n\n_c = Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["/Users/sheezaaziz/Documents/coding/learning/FullStack-Practice/graphql/tutorials/modern-graphql-apollo-prisma/social-media-fullstack/client/src/pages/Signin/Signin.js"],"names":["React","useState","useEffect","gql","useMutation","Form","Button","SIGN_IN","Signin","signin","data","loading","email","setEmail","password","setPassword","handleClick","variables","error","setError","userErrors","length","message","token","localStorage","setItem","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Form } from \"react-bootstrap\";\nimport Button from \"@restart/ui/esm/Button\";\n\nconst SIGN_IN = gql`\n  mutation SignIn($email: String!, $password: String!) {\n    signin(credentials: { password: $password, email: $email }) {\n      userErrors {\n        message\n      }\n      token\n    }\n  }\n`;\n\nexport default function Signin() {\n  const [signin, { data, loading }] = useMutation(SIGN_IN);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleClick = () => {\n    signin({\n      variables: {\n        email,\n        password,\n      },\n    });\n  };\n\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (data) {\n      if (data.signin.userErrors.length) {\n        setError(data.signin.userErrors[0].message);\n      }\n      if (data.signin.token) {\n        localStorage.setItem(\"token\", data.signin.token);\n      }\n    }\n  }, [data]);\n\n  return (\n    <div>\n      <Form>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n\n        {error && <p>{error}</p>}\n        <Button onClick={handleClick}>Signin</Button>\n      </Form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}