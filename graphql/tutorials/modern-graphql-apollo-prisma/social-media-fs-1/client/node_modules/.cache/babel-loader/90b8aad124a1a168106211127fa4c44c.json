{"ast":null,"code":"var _jsxFileName = \"/Users/sheezaaziz/Documents/coding/learning/FullStack-Practice/graphql/tutorials/modern-graphql-apollo-prisma/social-media-fullstack/client/src/pages/Posts/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Post from \"../../components/Post/Post\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_POSTS = gql`\n  query {\n    posts {\n      id\n      title\n      content\n      createdAt\n      user {\n        name\n      }\n    }\n  }\n`;\nexport default function Posts() {\n  _s();\n\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_POSTS);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error Page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 21\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Spinner\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  const {\n    posts\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        title: post.title,\n        content: post.content,\n        date: post.createdAt,\n        id: post.id,\n        user: post.user.name\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Posts, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/sheezaaziz/Documents/coding/learning/FullStack-Practice/graphql/tutorials/modern-graphql-apollo-prisma/social-media-fullstack/client/src/pages/Posts/Posts.js"],"names":["React","Post","gql","useQuery","GET_POSTS","Posts","data","error","loading","posts","map","post","title","content","createdAt","id","user","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;;AAEA,MAAMC,SAAS,GAAGF,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,eAAe,SAASG,KAAT,GAAiB;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BL,QAAQ,CAACC,SAAD,CAAzC;AAEA,MAAIG,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,MAAIC,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,QAAM;AAAEC,IAAAA;AAAF,MAAYH,IAAlB;AAEA,sBACE;AAAA,cACGG,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AACnB,0BACE,QAAC,IAAD;AAEE,QAAA,KAAK,EAAEA,IAAI,CAACC,KAFd;AAGE,QAAA,OAAO,EAAED,IAAI,CAACE,OAHhB;AAIE,QAAA,IAAI,EAAEF,IAAI,CAACG,SAJb;AAKE,QAAA,EAAE,EAAEH,IAAI,CAACI,EALX;AAME,QAAA,IAAI,EAAEJ,IAAI,CAACK,IAAL,CAAUC;AANlB,SACON,IAAI,CAACI,EADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAzBuBV,K;UACWF,Q;;;KADXE,K","sourcesContent":["import React from \"react\";\nimport Post from \"../../components/Post/Post\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nconst GET_POSTS = gql`\n  query {\n    posts {\n      id\n      title\n      content\n      createdAt\n      user {\n        name\n      }\n    }\n  }\n`;\n\nexport default function Posts() {\n  const { data, error, loading } = useQuery(GET_POSTS);\n\n  if (error) return <div>Error Page</div>;\n\n  if (loading) return <div>Spinner</div>;\n\n  const { posts } = data;\n\n  return (\n    <div>\n      {posts.map((post) => {\n        return (\n          <Post\n            key={post.id}\n            title={post.title}\n            content={post.content}\n            date={post.createdAt}\n            id={post.id}\n            user={post.user.name}\n          />\n        );\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}