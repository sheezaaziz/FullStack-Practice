{"ast":null,"code":"var _jsxFileName = \"/Users/sheezaaziz/Documents/coding/learning/FullStack-Practice/react-mongoose-graphql/client/src/components/AddBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { gql, useQuery } from '@apollo/client'; // graphql queries\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_AUTHORS = gql`\n  query getBooksQuery {\n    authors {\n      name\n      id\n    }\n  }\n`;\nexport default function AddBook() {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [genre, setGenre] = useState('');\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"title\",\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"genre\",\n      placeholder: \"genre\",\n      onChange: e => setGenre(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddBook, \"TvlsWPcWif/fDjHBUwdrz9E98cI=\");\n\n_c = AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["/Users/sheezaaziz/Documents/coding/learning/FullStack-Practice/react-mongoose-graphql/client/src/components/AddBook.js"],"names":["React","useState","gql","useQuery","GET_AUTHORS","AddBook","title","setTitle","genre","setGenre","handleSubmit","evt","preventDefault","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B,C,CAEA;;;AACA,MAAMC,WAAW,GAAGF,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,eAAe,SAASG,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMS,YAAY,GAAIC,GAAD,IAAS;AAC5BA,IAAAA,GAAG,CAACC,cAAJ;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,WAAW,EAAC,OAHd;AAIE,MAAA,QAAQ,EAAEG,CAAC,IAAIN,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;AAJzB;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,WAAW,EAAC,OAHd;AAIE,MAAA,QAAQ,EAAEF,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AAJzB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAxBuBV,O;;KAAAA,O","sourcesContent":["import React, { useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\n\n// graphql queries\nconst GET_AUTHORS = gql`\n  query getBooksQuery {\n    authors {\n      name\n      id\n    }\n  }\n`;\n\nexport default function AddBook() {\n  const [title, setTitle] = useState('');\n  const [genre, setGenre] = useState('');\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type='text'\n        name='title'\n        placeholder='title'\n        onChange={e => setTitle(e.target.value)}\n      />\n      <input\n        type='text'\n        name='genre'\n        placeholder='genre'\n        onChange={e => setGenre(e.target.value)}\n      />\n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}